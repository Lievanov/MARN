@model LaboratorioMarn.Models.CreateModel

@{
    ViewBag.Title = "Create";
}

<h2>Crear Usuario</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.tipo, "Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.DropDownListFor(model => model.tipo, (IEnumerable<SelectListItem>)ViewBag.TipoSelection, htmlAttributes: new { @class = "form-control", @id = "tipoEmpleado" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.area, "Area", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.DropDownListFor(model => model.area, (IEnumerable<SelectListItem>)ViewBag.AreaSelection, htmlAttributes: new { @class = "form-control" , @id = "areaEmpleado", @disabled = "disabled" })
            </div>
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-3">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Crear" class="btn btn-success btn-block" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $("#tipoEmpleado").change(function () {
                if ($(this).val() == 2) {
                    $("#areaEmpleado").removeAttr("disabled");
                }
                else {
                    $("#areaEmpleado").attr("disabled", "disabled");
                }
            });
        });

    </script>
}
   